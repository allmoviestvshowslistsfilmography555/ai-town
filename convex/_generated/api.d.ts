/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.0.3-alpha.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as agent from "../agent";
import type * as chat from "../chat";
import type * as engine from "../engine";
import type * as init from "../init";
import type * as lib_memory from "../lib/memory";
import type * as lib_migrations from "../lib/migrations";
import type * as lib_node_openai from "../lib/node_openai";
import type * as lib_openai from "../lib/openai";
import type * as lib_physics from "../lib/physics";
import type * as lib_pinecone from "../lib/pinecone";
import type * as lib_relationships from "../lib/relationships";
import type * as lib_utils from "../lib/utils";
import type * as types from "../types";
import type * as users from "../users";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  agent: typeof agent;
  chat: typeof chat;
  engine: typeof engine;
  init: typeof init;
  "lib/memory": typeof lib_memory;
  "lib/migrations": typeof lib_migrations;
  "lib/node_openai": typeof lib_node_openai;
  "lib/openai": typeof lib_openai;
  "lib/physics": typeof lib_physics;
  "lib/pinecone": typeof lib_pinecone;
  "lib/relationships": typeof lib_relationships;
  "lib/utils": typeof lib_utils;
  types: typeof types;
  users: typeof users;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
